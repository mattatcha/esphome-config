substitutions:
  device_name: emporia-vue-2
  friendly_name: Emporia Vue 2

packages:
  common: !include .common.yaml

external_components:
  - source: github://emporia-vue-local/esphome@dev
    components:
      - emporia_vue

esp32:
  board: esp32dev
  framework:
    type: esp-idf
    version: recommended

logger:
  level: INFO

preferences:
  # the default of 1min is far too short--flash chip is rated
  # for approx 100k writes.
  flash_write_interval: "48h"

i2c:
  sda: 21
  scl: 22
  scan: false
  # frequency: 200kHz # recommended range is 50-200kHz
  frequency: 400kHz  # recommended range is 50-200kHz (Fixes  I2C error 3)
  timeout: 1ms
  id: i2c_a
time:
  - platform: sntp
    id: my_time

# these are called references in YAML. They allow you to reuse
# this configuration in each sensor, while only defining it once
.defaultfilters:
  - &throttle_avg
    # average all raw readings together over a 5 second span before publishing
    throttle_average: 5s
  - &throttle_time
    # only send the most recent measurement every 5 seconds
    throttle: 5s
  - &invert # invert and filter out any values below 0.
    lambda: "return max(-x, 0.0f);"
  - &pos # filter out any values below 0.
    lambda: "return max(x, 0.0f);"
  - &abs # take the absolute value of the value
    lambda: "return abs(x);"

sensor:
  - platform: emporia_vue
    i2c_id: i2c_a
    phases:
      - id: phase_a # Verify that this specific phase/leg is connected to correct input wire color on device listed below
        input: RED # Vue device wire color
        calibration: 0.02127 # 0.022 is used as the default as starting point but may need adjusted to ensure accuracy
        # To calculate new calibration value use the formula <in-use calibration value> * <accurate voltage> / <reporting voltage>
        voltage:
          name: "Phase A Voltage"
          filters: [*throttle_avg, *pos]
      - id: phase_b # Verify that this specific phase/leg is connected to correct input wire color on device listed below
        input: BLACK # Vue device wire color
        calibration: 0.02331 # 0.022 is used as the default as starting point but may need adjusted to ensure accuracy
        # To calculate new calibration value use the formula <in-use calibration value> * <accurate voltage> / <reporting voltage>
        voltage:
          name: "Phase B Voltage"
          filters: [*throttle_avg, *pos]
    ct_clamps:
      - phase_id: phase_a
        input: "A" # Verify the CT going to this device input also matches the phase/leg
        power:

          id: phase_a_power
          device_class: power
          filters: [*pos]
      - phase_id: phase_b
        input: "B" # Verify the CT going to this device input also matches the phase/leg
        power:

          id: phase_b_power
          device_class: power
          filters: [*pos]
      # Pay close attention to set the phase_id for each breaker by matching it to the phase/leg it connects to in the panel
      #MiniSplit
      - {
          phase_id: phase_a,
          input: "1",
          power:
            { id: cir1, filters: [*pos] },
        }
        #MiniSplit
      - {
          phase_id: phase_b,
          input: "2",
          power:
            { id: cir2, filters: [*pos] },
        }
        # Fridge
      - {
          phase_id: phase_a,
          input: "3",
          power:
            {id: cir3, filters: [*pos] },
        }
        # Septic Pump
      - {
          phase_id: phase_b,
          input: "4",
          power:
            {  id: cir4, filters: [*pos] },
        }
        # Water Heater
      - {
          phase_id: phase_a,
          input: "5",
          power:
            {  id: cir5, filters: [*pos] },
        }
        # Water Heater
      - {
          phase_id: phase_b,
          input: "6",
          power:
            {  id: cir6, filters: [*pos] },
        }
        # AC Condensor
      - {
          phase_id: phase_b,
          input: "7",
          power:
            {  id: cir7, filters: [*pos] },
        }
        # AC Condensor
      - {
          phase_id: phase_a,
          input: "8",
          power:
            {  id: cir8, filters: [*pos] },
        }
        # AC Blower
      - {
          phase_id: phase_b,
          input: "9",
          power:
            {  id: cir9, filters: [*pos] },
        }
        # AC Blower
      - {
          phase_id: phase_a,
          input: "10",
          power:
            {

              id: cir10,
              filters: [*pos],
            },
        }
        # Pool
      - {
          phase_id: phase_a,
          input: "11",
          power:
            {

              id: cir11,
              filters: [*pos],
            },
        }
        # Pool
      - {
          phase_id: phase_b,
          input: "12",
          power:
            {

              id: cir12,
              filters: [*pos],
            },
        }
      - {
          phase_id: phase_a,
          input: "13",
          power:
            {

              id: cir13,
              filters: [*pos],
            },
        }
      - {
          phase_id: phase_b,
          input: "14",
          power:
            {

              id: cir14,
              filters: [*pos],
            },
        }
      - {
          phase_id: phase_a,
          input: "15",
          power:
            {

              id: cir15,
              filters: [*pos],
            },
        }
      - {
          phase_id: phase_b,
          input: "16",
          power:
            {

              id: cir16,
              filters: [*pos],
            },
        }
    on_update:
      then:
        - component.update: total_power
        - component.update: balance_power

  - { platform: copy, name: "Phase A Power", source_id: phase_a_power, filters: *throttle_avg }
  - { platform: copy, name: "Phase B Power", source_id: phase_b_power, filters: *throttle_avg }
  - { platform: copy, name:  "Circuit 1 Power", source_id:  cir1, filters: *throttle_avg }
  - { platform: copy, name:  "Circuit 2 Power", source_id:  cir2, filters: *throttle_avg }
  - { platform: copy, name:  "Circuit 3 Power", source_id:  cir3, filters: *throttle_avg }
  - { platform: copy, name:  "Circuit 4 Power", source_id:  cir4, filters: *throttle_avg }
  - { platform: copy, name:  "Circuit 5 Power", source_id:  cir5, filters: *throttle_avg }
  - { platform: copy, name:  "Circuit 6 Power", source_id:  cir6, filters: *throttle_avg }
  - { platform: copy, name:  "Circuit 7 Power", source_id:  cir7, filters: *throttle_avg }
  - { platform: copy, name:  "Circuit 8 Power", source_id:  cir8, filters: *throttle_avg }
  - { platform: copy, name:  "Circuit 9 Power", source_id:  cir9, filters: *throttle_avg }
  - { platform: copy, name: "Circuit 10 Power", source_id: cir10, filters: *throttle_avg }
  - { platform: copy, name: "Circuit 11 Power", source_id: cir11, filters: *throttle_avg }
  - { platform: copy, name: "Circuit 12 Power", source_id: cir12, filters: *throttle_avg }
  - { platform: copy, name: "Circuit 13 Power", source_id: cir13, filters: *throttle_avg }
  - { platform: copy, name: "Circuit 14 Power", source_id: cir14, filters: *throttle_avg }
  - { platform: copy, name: "Circuit 15 Power", source_id: cir15, filters: *throttle_avg }
  - { platform: copy, name: "Circuit 16 Power", source_id: cir16, filters: *throttle_avg }

  - platform: template
    lambda: return id(phase_a_power).state + id(phase_b_power).state;
    update_interval: never
    id: total_power
    device_class: power
    state_class: measurement
    unit_of_measurement: "W"
    filters: *throttle_avg




  - platform: total_daily_energy
    name: "Total Daily Energy"
    power_id: total_power
    accuracy_decimals: 0
    restore: false
    filters: *throttle_time

  - platform: template
    name: "Balance Power"
    lambda: !lambda |-
      return max(0.0f, id(total_power).state -
        id( cir1).state -
        id( cir2).state -
        id( cir3).state -
        id( cir4).state -
        id( cir5).state -
        id( cir6).state -
        id( cir7).state -
        id( cir8).state -
        id( cir9).state -
        id(cir10).state -
        id(cir11).state -
        id(cir12).state -
        id(cir13).state -
        id(cir14).state -
        id(cir15).state -
        id(cir16).state);
    update_interval: never
    id: balance_power
    device_class: power
    state_class: measurement
    unit_of_measurement: "W"
    filters: *throttle_avg

  - platform: total_daily_energy
    name: "Balance Daily Energy"
    power_id: balance_power
    accuracy_decimals: 0
    restore: false
    filters: *throttle_time

  - { power_id:  cir1, platform: total_daily_energy, accuracy_decimals: 0, restore: false, name:  "Circuit 1 Daily Energy", filters: *throttle_time }
  - { power_id:  cir2, platform: total_daily_energy, accuracy_decimals: 0, restore: false, name:  "Circuit 2 Daily Energy", filters: *throttle_time }
  - { power_id:  cir3, platform: total_daily_energy, accuracy_decimals: 0, restore: false, name:  "Circuit 3 Daily Energy", filters: *throttle_time }
  - { power_id:  cir4, platform: total_daily_energy, accuracy_decimals: 0, restore: false, name:  "Circuit 4 Daily Energy", filters: *throttle_time }
  - { power_id:  cir5, platform: total_daily_energy, accuracy_decimals: 0, restore: false, name:  "Circuit 5 Daily Energy", filters: *throttle_time }
  - { power_id:  cir6, platform: total_daily_energy, accuracy_decimals: 0, restore: false, name:  "Circuit 6 Daily Energy", filters: *throttle_time }
  - { power_id:  cir7, platform: total_daily_energy, accuracy_decimals: 0, restore: false, name:  "Circuit 7 Daily Energy", filters: *throttle_time }
  - { power_id:  cir8, platform: total_daily_energy, accuracy_decimals: 0, restore: false, name:  "Circuit 8 Daily Energy", filters: *throttle_time }
  - { power_id:  cir9, platform: total_daily_energy, accuracy_decimals: 0, restore: false, name:  "Circuit 9 Daily Energy", filters: *throttle_time }
  - { power_id: cir10, platform: total_daily_energy, accuracy_decimals: 0, restore: false, name: "Circuit 10 Daily Energy", filters: *throttle_time }
  - { power_id: cir11, platform: total_daily_energy, accuracy_decimals: 0, restore: false, name: "Circuit 11 Daily Energy", filters: *throttle_time }
  - { power_id: cir12, platform: total_daily_energy, accuracy_decimals: 0, restore: false, name: "Circuit 12 Daily Energy", filters: *throttle_time }
  - { power_id: cir13, platform: total_daily_energy, accuracy_decimals: 0, restore: false, name: "Circuit 13 Daily Energy", filters: *throttle_time }
  - { power_id: cir14, platform: total_daily_energy, accuracy_decimals: 0, restore: false, name: "Circuit 14 Daily Energy", filters: *throttle_time }
  - { power_id: cir15, platform: total_daily_energy, accuracy_decimals: 0, restore: false, name: "Circuit 15 Daily Energy", filters: *throttle_time }
  - { power_id: cir16, platform: total_daily_energy, accuracy_decimals: 0, restore: false, name: "Circuit 16 Daily Energy", filters: *throttle_time }
